services:
  # --- API FastAPI ---
  - type: web
    name: tech-challenge-api
    env: python
    region: oregon 
    plan: free
    
    buildCommand: |
      pip install -r requirements.txt
      
      # 1. Cria as tabelas (books, users) no banco Postgres
      alembic upgrade head
      
      # 2. Cria o usuário 'admin' lendo do .env
      python scripts/create_admin.py
      
      # 3. POPULA O BANCO AUTOMATICAMENTE
      # (Lê o seu 'data/books.csv' e o insere no Postgres)
      python scripts/load_to_db.py

    startCommand: gunicorn api.main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:10000

    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: books-db
          property: internalConnectionString
      - key: SECRET_KEY
        generateValue: true
      - key: INIT_ADMIN_USERNAME
        value: "admin"
      - key: INIT_ADMIN_EMAIL
        value: "admin@example.com"
      - key: INIT_ADMIN_PASSWORD
        value: "SenhaForte123" 

  # --- Dashboard Streamlit ---
  - type: web
    name: tech-challenge-dashboard
    env: python
    region: oregon
    plan: free
    rootDir: ./streamlit_dashboard
    buildCommand: pip install -r requirements.txt
    startCommand: streamlit run dashboard.py --server.port 10000 --server.address 0.0.0.0
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: books-db
          property: internalConnectionString

# --- Banco de Dados Postgres ---
databases:
  - name: books-db
    region: oregon
    plan: free